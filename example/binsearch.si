i8* malloc(i64 size);
i8 free(i8* ptr);
i64 printf(i8 *fmt, ...);

i64 binsearch(i64 x, i64* v, i64 n) {
    i64 low = 0;
    i64 high = n - 1;
    i64 mid;

    while (low <= high) {
        mid = (low + high) / 2;
        if (x < v[mid]) {
            high = mid - 1;
        } else if (x > v[mid]) {
            low = mid + 1;
        } else {
            return mid;
        }
    }

    return -1;
}

i64 main() {
    i64 n = 10;
    i64 x = 5;

    i64* v = (i64*)malloc(sizeof(i64) * n);
    v[0] = 1;
    v[1] = 2;
    v[2] = 3;
    v[3] = 4;
    v[4] = 5;
    v[5] = 6;
    v[6] = 7;
    v[7] = 8;
    v[8] = 9;
    v[9] = 10;

    printf("%d", binsearch(x, v, n));

    return 0;
}